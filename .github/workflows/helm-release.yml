name: Release Open WebUI Helm Charts

on:
  push:
    branches:
      - main
    paths:
      - "charts/**"

jobs:
  # semantic-release:
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Checkout repo
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 'lts/*'
  #     - name: Install dependencies
  #       run: npm install
  #     - name: Release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: npx semantic-release

  #     - name: Install yq
  #       run: |
  #         wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O yq &&\
  #         chmod +x yq

  #     - name: Get version
  #       id: get_version
  #       run: |
  #         echo "VERSION=$(cat charts/open-webui/Chart.yaml | ./yq -r  '.version')" >> $GITHUB_OUTPUT

  #     - name: Commit Chart.yaml
  #       uses: stefanzweifel/git-auto-commit-action@v4
  #       with:
  #         commit_message: 'chore(release) bump version to ${{ steps.get_version.outputs.VERSION }}'
  #         file_pattern: 'charts/open-webui/Chart.yaml'

  release:
    #needs: semantic-release
    if: github.repository == 'open-webui/helm-charts'
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Add Dependency Repos
        run: |
          helm repo add ollama https://otwld.github.io/ollama-helm/
          helm repo add open-webui https://helm.openwebui.com/
          helm repo add tika https://apache.jfrog.io/artifactory/tika/

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          skip_existing: false
          packages_with_index: true
          charts_dir: charts/
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Login to GitHub Container Registry
        run: |
          echo "${GHCR_REGISTRY_PASSWORD}" | helm registry login ghcr.io --username ${{ github.actor }} --password-stdin
        env:
          GHCR_REGISTRY_PASSWORD: "${{ secrets.GITHUB_TOKEN }}"

      - name: Push Charts to ghcr.io
        run: |
          for pkg in .cr-release-packages/*; do
            if [ -z "${pkg:-}" ]; then
              echo "No charts to release"
              break
            fi
            helm push "${pkg}" oci://ghcr.io/${{ github.repository }}
          done
